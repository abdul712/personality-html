[variables]
NIXPACKS_METADATA = 'staticfile'

[staticAssets]
"nginx.conf" = '''
daemon off;
error_log /dev/stdout info;
worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /nix/store/*-user-environment/conf/mime.types;
    default_type application/octet-stream;
    
    # Logging
    access_log /dev/stdout;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 4096;
    server_names_hash_bucket_size 128;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Hide nginx version
    server_tokens off;

    server {
        listen 0.0.0.0:80;
        root /app/;
        index index.html;
        
        # Enable gzip for this server
        gzip on;
        
        # Caching for static assets
        location ~* \.(css|js|ico|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        # Service Worker caching
        location = /sw.js {
            expires 0;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
        
        # Manifest file
        location = /manifest.json {
            expires 1d;
            add_header Cache-Control "public";
        }
        
        # Main application - SPA routing
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache HTML files for a short time
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
        }
        
        # API endpoints (if added later)
        location /api/ {
            # For future API integration
            return 404;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Deny access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /app/;
            internal;
        }
        
        location = /50x.html {
            root /app/;
            internal;
        }
    }
}
'''

[phases.setup]
nixPkgs = ['nginx', 'nodejs']

[phases.build]
cmds = ['node scripts/create-article-registry.js']
nixOverlays = []
nixpkgsArchive = '5148520bfab61f99fd25fb9ff7bfbb50dad3c9db'
cmds = ['mkdir /etc/nginx/ /var/log/nginx/ /var/cache/nginx/']

[start]
cmd = '[[ -z "${PORT}" ]] && echo "Environment variable PORT not found. Using PORT 80" || sed -i "s/0.0.0.0:80/$PORT/g" /assets/nginx.conf && nginx -c /assets/nginx.conf'